#include <assert.h>
#include <stdlib.h>
#include "assembler/labels/labels.hpp"
#include "lib/lib.hpp"



static int  LabelsComparator(const char* label_1, const char* label_2);
static bool IsCharLabelNameEnd(char c);



LabelsArray LabelsArrayCtor(size_t default_labels_array_size)
{
    LabelsArray labels_array = {};

    labels_array.array = (Label*) calloc(default_labels_array_size, sizeof(Label));

    if (!labels_array.array)
        EXIT(EXIT_FAILURE, "failed allocate memory for labels array.");

    labels_array.capacity = default_labels_array_size;
    labels_array.pointer  = 0;
    labels_array.size     = 0;

    return labels_array;
}



void LabelsArrayDtor(LabelsArray* labels_array)
{
    assert(labels_array);
    assert(labels_array->array);

    FREE(labels_array->array);
    *labels_array = {};

    return;
}



Label LabelCtor(const char* name, size_t pointer, bool is_defined)
{
    assert(name);

    Label label = {};

    label.name       = name;
    label.code_place = pointer;
    label.is_defined = is_defined;

    return label;
}



void PushLabel(LabelsArray* labels_array, const Label* label)
{
    assert(labels_array);
    assert(label);
        
    labels_array->size++;

    size_t size     = labels_array->size;
    size_t capacity = labels_array->capacity;

    if (size <= capacity)
    {
        labels_array->array[labels_array->size - 1] = *label;
        return;
    }

    size_t new_capacity = 2 * capacity;
    labels_array->array = (Label*) realloc(labels_array->array, new_capacity * sizeof(Label));

    if (!labels_array->array)
        EXIT(EXIT_FAILURE, "failed reallocate memory for push for labels array.");

    labels_array->array[labels_array->size - 1] = *label;
    labels_array->capacity = new_capacity;

    return;
}



bool WasLabelAlreadyDefined(const LabelsArray* labels_array, const char* label_name, size_t* label_pointer)
{
    assert(labels_array);
    assert(label_name);
    assert(label_pointer);
    
    size_t size = labels_array->size;
    const Label* array = labels_array->array;


    for (size_t lp = 0; lp < size; lp++) // lp = label_pointer
    {
        const char* label_i_name = array[lp].name;

        if (LabelsComparator(label_name, label_i_name) == 0)
        {
            *label_pointer = lp;
            return true;
        }
    }

    return false;
}



static int LabelsComparator(const char* label_1, const char* label_2)
{
    assert(label_1);
    assert(label_2);
    
    size_t i = 0;
    while  ((label_1[i] == label_2[i])      &&
            !IsCharLabelNameEnd(label_1[i]) &&
            !IsCharLabelNameEnd(label_2[i]))
    {
        i++;
    }

    return label_1[i] - label_2[i];
}



static bool IsCharLabelNameEnd(char c)
{
    return (c == ':');
}


