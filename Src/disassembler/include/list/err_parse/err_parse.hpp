#ifndef ERR_PASRE_HPP
#define ERR_PASRE_HPP

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// #include "list/list.hpp"
#include "lib/lib.hpp"

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

struct List_t;
struct ListError_t;

enum class ListErrorType;
enum class ListWarningType;

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

void        ListAssert            (List_t* list, ListError_t err ON_DEBUG(, const char* file, unsigned int line, const char* func));

ON_DEBUG(
ListError_t ErrTransfer           (ListError_t* err         , const char* file, unsigned int line, const char* func);
)
ListError_t   ListErrorStatusCtor (ListErrorType   err_type  ON_DEBUG(, const char* file, unsigned int line, const char* func));
ListError_t ListWarningStatusCtor (ListWarningType warn_type ON_DEBUG(, const char* file, unsigned int line, const char* func));
ListError_t      ListOkStatusCtor ();

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#define LIST_ASSERT(list_ptr, err) ListAssert(list_ptr, err ON_DEBUG(, FLF))

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#define GET_STATUS_OK(           ) ListOkStatusCtor     (              )
#define GET_STATUS_WARN(warn_type) ListWarningStatusCtor(warn_type ON_DEBUG(, FLF))
#define GET_STATUS_ERR( err_type ) ListErrorStatusCtor  (err_type  ON_DEBUG(, FLF))

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#define ASSERT_PRINT(err_ptr)      ListAssertPrint      (err_ptr  ON_DEBUG(, FLF))

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#ifdef _DEBUG
#define TRANSFER_ERROR(err_ptr)    ErrTransfer          (err_ptr  ,  FLF)
#else // _DEBUG
#define TRANSFER_ERROR(err_ptr) (*(err_ptr))
#endif // _DENBUG

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------                          

#define RETURN_IF_ERR(err) do                               \
{                                                            \
    ListError_t err_copy = err;                               \
    if (err_copy.status == ListStatus::ERR)                    \
        RETURN_WHEN_FUNC_CALLS_LOG(TRANSFER_ERROR(&err_copy));  \
} while(0)                                                       \

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#define RETURN_IF_ERR_OR_WARN(err) do                       \
{                                                            \
    ListError_t err_copy = err;                               \
    if (err_copy.status != ListStatus::OK)                     \
        RETURN_WHEN_FUNC_CALLS_LOG(TRANSFER_ERROR(&err_copy));  \
} while(0)                                                       \

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#endif // ERR_PASRE_HPP
