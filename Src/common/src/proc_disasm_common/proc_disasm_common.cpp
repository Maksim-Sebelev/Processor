
#include <stddef.h>
#include "proc_disasm_common/proc_disasm_common.hpp"

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

one_bit_t GetIBitOfInt(int n, size_t i)
{
    return (n >> i) & 0x1;
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// HandlePush helper functions

PushType GetPushType(int push_type_int)
{
    one_bit_t   number_flag = GetIBitOfInt(push_type_int, 3);
    one_bit_t register_flag = GetIBitOfInt(push_type_int, 2);
    one_bit_t   memory_flag = GetIBitOfInt(push_type_int, 1);
    one_bit_t aligment_flag = GetIBitOfInt(push_type_int, 0);

    PushType type = 
    {
        .number   = (one_bit_t) (number_flag   ? 1 : 0),
        .reg      = (one_bit_t) (register_flag ? 1 : 0),
        .memory   = (one_bit_t) (memory_flag   ? 1 : 0),
        .aligment = (one_bit_t) (aligment_flag ? 1 : 0),
    };

    return type;
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

bool IsPushTypeNumber(PushType push_type)
{
    return (push_type.number   == 1) &&
           (push_type.reg      == 0) &&
           (push_type.memory   == 0) &&
           (push_type.aligment == 0);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

bool IsPushTypeRegister(PushType push_type)
{
    return (push_type.number   == 0) &&
           (push_type.reg      == 1) &&
           (push_type.memory   == 0) &&
           (push_type.aligment == 0);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

bool IsPushTypeMemory(PushType push_type)
{
    return  (push_type.number   == 0) &&
            (push_type.reg      == 0) &&
            (push_type.memory   == 1) &&
            (push_type.aligment == 0);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

bool IsPushTypeMemoryRegister(PushType push_type)
{
    return (push_type.number   == 0) &&
           (push_type.reg      == 1) &&
           (push_type.memory   == 1) &&
           (push_type.aligment == 0);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

bool IsPushTypeAligment(PushType push_type)
{
    return (push_type.number   == 0) &&
           (push_type.reg      == 0) &&
           (push_type.memory   == 1) &&
           (push_type.aligment == 1);
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// HandlePop helper functions

PopType GetPopType(int pop_type_int)
{
    one_bit_t register_flag = GetIBitOfInt(pop_type_int, 2);
    one_bit_t memory_flag   = GetIBitOfInt(pop_type_int, 1);
    one_bit_t aligment_flag = GetIBitOfInt(pop_type_int, 0);

    PopType type =
    {
        .reg      = (one_bit_t) (register_flag ? 1 : 0),
        .memory   = (one_bit_t) (  memory_flag ? 1 : 0),
        .aligment = (one_bit_t) (aligment_flag ? 1 : 0),
    };

    return type;
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

bool IsPopTypeRegister(PopType pop_type)
{
    return (pop_type.reg      == 1) &&
           (pop_type.memory   == 0) &&
           (pop_type.aligment == 0);
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------bool IsPopTypeRegisterMemo

bool IsPopTypeMemory(PopType pop_type)
{
    return (pop_type.reg      == 0) &&
           (pop_type.memory   == 1) &&
           (pop_type.aligment == 0);
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------bool IsPopTypeRegisterMemo

bool IsPopTypeMemoryRegister(PopType pop_type)
{
    return (pop_type.reg      == 1) &&
           (pop_type.memory   == 1) &&
           (pop_type.aligment == 0);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

bool IsPopTypeAligment(PopType pop_type)
{
    return (pop_type.reg      == 0) &&
           (pop_type.memory   == 0) &&
           (pop_type.aligment == 1);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
