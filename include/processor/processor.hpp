#ifndef PROCESSOR_HPP
#define PROCESSOR_HPP

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include "common/globalInclude.hpp"
#include "lib/colorPrint.hpp"
#include "lib/lib.hpp"

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#ifdef _PROCESSOR_DEBUG
    #define ON_PROCESSOR_DEBUG(...) __VA_ARGS__ 
#else
    #define ON_PROCESSOR_DEBUG(...)
#endif

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

enum class ProcessorErrorType
{
    NO_ERR                ,
    INVALID_CMD           ,
    SPU_CODE_CALLOC_NULL  ,
    SPU_RAM_CALLOC_NULL   ,
    FAILED_READ_FILE_LEN  ,
    FAILED_OPEN_CODE_FILE ,
    NO_HALT               ,
    DIVISION_BY_ZERO      ,
    FREAD_BAD_RETURN      ,
    RAM_BAD_CALLOC        ,
    RAM_BAD_REALLOC       ,
    RAM_OVERFLOW          ,
    OUT_CHAR_NOT_CHAR     ,
};

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

struct ProcessorErr
{
    CodePlace          place;
    ProcessorErrorType err;
};

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

void RunProcessor         (const IOfile* file);
void ProcessorAssertPrint (ProcessorErr* Err, const char* File, int Line, const char* Func);

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#define PROCESSOR_ASSERT(Err) do                                   \
{                                                                   \
    ProcessorErr ErrCopy = Err;                                      \
    if (ErrCopy.err != ProcessorErrorType::NO_ERR)                    \
    {                                                                  \
        ProcessorAssertPrint(&ErrCopy, __FILE__, __LINE__, __func__);   \
        COLOR_PRINT(CYAN, "abort() in 3, 2, 1...");                      \
        abort();                                                          \
    }                                                                      \
} while (0)                                                                 \

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#endif //PROCESSOR_HPP
